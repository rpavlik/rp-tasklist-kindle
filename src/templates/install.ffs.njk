{% extends "shared/base.ffs.njk" %}
LOG=/mnt/us/{{friendlyName}}_update_log.txt

progress 25 "Checking if {{friendlyName}} is installed"
varhandler=$(sqlite3 /var/local/appreg.db "select handlerId from handlerIds where handlerId='{{qualifiedName}}'")
varmemory=$(sqlite3 /var/local/appreg.db "select handlerId from properties where handlerId='{{qualifiedName}}' and name='memUnloadLevel'")
mesquite=$(sqlite3 /var/local/appreg.db "select value from properties where handlerId='{{qualifiedName}}' and name='command'" | grep mesquite)
varbaseus=$(sqlite3 /var/local/appreg.db "select value from properties where handlerId='{{qualifiedName}}' and name='command'" | grep base)

if [[ -n "$varhandler" ]]
then
	echo "{{friendlyName}} is already installed" >> $LOG
	appinstalled=1
	
	if [[ -z "$mesquite" ]]
	then
		echo "{{friendlyName}} is not yet updated to mesquite" >> $LOG	
		sqlite3 /var/local/appreg.db "delete from properties where handlerId='{{qualifiedName}}' and name='command'"
		sqlite3 /var/local/appreg.db "INSERT INTO properties (handlerId, name, value) VALUES ('{{qualifiedName}}','command','/usr/bin/mesquite -l {{qualifiedName}} -c /mnt/us/extensions/{{shortName}}/bin/')"
	else
		echo "{{friendlyName}} is already updated to mesquite" >> $LOG
		if [[ ! -z "$varbaseus" ]]
		then
			echo "Moving installation folder to /mnt/us" >> $LOG
			sqlite3 /var/local/appreg.db "delete from properties where handlerId='{{qualifiedName}}' and name='command'"
			sqlite3 /var/local/appreg.db "INSERT INTO properties (handlerId, name, value) VALUES ('{{qualifiedName}}','command','/usr/bin/mesquite -l {{qualifiedName}} -c /mnt/us/extensions/{{shortName}}/bin/')"
		fi
	fi
	
	if [ -d "$INSTALLDIR" ]
	then
		echo "{{friendlyName}} folder present" >> $LOG
		komicpresent=1
	else
		echo "{{friendlyName}} folder not present" >> $LOG
	fi

else

	echo "{{friendlyName}} is not yet installed" >> $LOG
	sqlite3 /var/local/appreg.db "INSERT INTO handlerIds VALUES ('{{qualifiedName}}')"
	sqlite3 /var/local/appreg.db "INSERT INTO properties (handlerId, name, value) VALUES ('{{qualifiedName}}','command','/usr/bin/mesquite -l {{qualifiedName}} -c /mnt/us/extensions/{{shortName}}/bin/')"
	sqlite3 /var/local/appreg.db "INSERT INTO properties (handlerId, name, value) VALUES ('{{qualifiedName}}','unloadPolicy','unloadOnPause')"
	
fi

if [[ -n "$varmemory" ]]
then
	echo "Bigger memory space already present" >> $LOG
else
	echo "Bigger memory space not present" >> $LOG
	sqlite3 /var/local/appreg.db "INSERT INTO properties (handlerId, name, value) VALUES ('{{qualifiedName}}','memUnloadLevel','150000')"
	sqlite3 /var/local/appreg.db "INSERT INTO properties (handlerId, name, value) VALUES ('{{qualifiedName}}','memWarnLevel','71680')"
fi		

progress 50 "Copying {{friendlyName}}"
echo "--------------------------------" >> $LOG
if [[ -n "$appinstalled" ]]
then
	echo "Updating {{friendlyName}} and managing file__0.localstorage" >> $LOG
	
	if [[ -n "$komicpresent" ]]
	then
		echo "Removing old {{friendlyName}} and unzipping new {{friendlyName}}" >> $LOG
		rm -rf $INSTALLDIR || fail "Unable to delete {{friendlyName}} folder"
		unzip {{shortName}}.zip -d /mnt/us/extensions/ || fail "Unable to unzip {{friendlyName}}"
	else
		echo "Unzipping new {{friendlyName}}" >> $LOG
		unzip {{shortName}}.zip -d /mnt/us/extensions/ || fail "Unable to unzip {{friendlyName}}"
	fi
	
	if [[ -n "$localstoragepresent" ]]
	then
		echo "Restoring old file__0.localstorage" >> $LOG
		mv /mnt/us/file__0.localstorage $LOCALSTORAGE || fail "Unable to replace old file__0.localstorage"
		rm -f /mnt/us/file__0.localstorage || fail "Unable to delete old file__0.localstorage"
	else
		echo "Placing new file__0.localstorage" >> $LOG
		mv file__0.localstorage $LOCALSTORAGE || fail "Unable to place new file__0.localstorage"
	fi
	
	echo "Updating upstart script" >> $LOG
	rm -rf $UPSTART || fail "Unable to delete upstart script"
	mv komic_event_handler.conf $UPSTART || fail "Unable to place upstart script"
	
	sqlite3 /mnt/us/extensions/{{shortName}}/bin/resource/LocalStorage/file__0.localstorage "INSERT INTO ItemTable (key, value) VALUES ('{{shortName}}Status', 'updated')"
	
else

	echo "Installing {{friendlyName}}, placing plain file__0.localstorage and upstart script" >> $LOG
	unzip -o {{shortName}}.zip -d /mnt/us/extensions/ || fail "Unable to unzip {{friendlyName}}"
	mv file__0.localstorage $LOCALSTORAGE || fail "Unable to place new file__0.localstorage"
	mv komic_event_handler.conf $UPSTART || fail "Unable to place upstart script"
	
	sqlite3 /mnt/us/extensions/{{shortName}}/bin/resource/LocalStorage/file__0.localstorage "INSERT INTO ItemTable (key, value) VALUES ('{{shortName}}Status', 'firstRun')"
	
fi

progress 75 "Creating {{friendlyName}} documents folder"
if [ -d "$DOCS" ]
then
	echo "{{friendlyName}} documents folder present" >> $LOG
	unzip -o =README=.zip -d $DOCS/ || fail "Unable to unzip README"
else
	echo "Creating {{friendlyName}} documents folder" >> $LOG
	mkdir -p $DOCS
	unzip -o =README=.zip -d $DOCS/ || fail "Unable to unzip README"
fi

progress 100 "Installation complete."
echo "Installation complete" >> $LOG
mv $LOG /mnt/us/extensions/{{shortName}}/bin/resource/Logs/{{friendlyName}}_update_log.txt